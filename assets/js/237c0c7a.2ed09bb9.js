"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3167],{1:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=n(5893),i=n(1151);const a={title:"Honeycomb",description:"Discover how to enhance application performance with our guide on enabling and analyzing telemetry data in Tailcall. Learn to configure observability support using OpenTelemetry for insights into logs, metrics, and traces, with practical integration examples for platforms like Honeycomb.io, New Relic, and Datadog.",sidebar_position:4},r=void 0,c={id:"telemetry/honey-comb",title:"Honeycomb",description:"Discover how to enhance application performance with our guide on enabling and analyzing telemetry data in Tailcall. Learn to configure observability support using OpenTelemetry for insights into logs, metrics, and traces, with practical integration examples for platforms like Honeycomb.io, New Relic, and Datadog.",source:"@site/docs/telemetry/honey-comb.md",sourceDirName:"telemetry",slug:"/telemetry/honey-comb",permalink:"/docs/telemetry/honey-comb",draft:!1,unlisted:!1,editUrl:"https://github.com/tailcallhq/tailcallhq.github.io/tree/develop/docs/telemetry/honey-comb.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Honeycomb",description:"Discover how to enhance application performance with our guide on enabling and analyzing telemetry data in Tailcall. Learn to configure observability support using OpenTelemetry for insights into logs, metrics, and traces, with practical integration examples for platforms like Honeycomb.io, New Relic, and Datadog.",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"New Relic",permalink:"/docs/telemetry/new-relic"},next:{title:"Apollo Studio",permalink:"/docs/telemetry/apollo-studio"}},s={},l=[];function d(e){const t={a:"a",code:"code",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["Go to ",(0,o.jsx)(t.a,{href:"https://www.honeycomb.io",children:"honeycomb.io"})]}),"\n",(0,o.jsx)(t.li,{children:"Login to your account"}),"\n",(0,o.jsxs)(t.li,{children:["Go to ",(0,o.jsx)(t.code,{children:"Account -> Team Settings -> Environments and API Keys -> Configuration"})," and create new or copy existing api key"]}),"\n",(0,o.jsxs)(t.li,{children:["Go to tailcall config and update settings:","\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-graphql",children:'schema\n  @telemetry(\n    export: {\n      otlp: {\n        url: "https://api.honeycomb.io:443"\n        headers: [\n          {\n            key: "x-honeycomb-team"\n            value: "{{.env.HONEYCOMB_API_KEY}}"\n          }\n          {\n            key: "x-honeycomb-dataset"\n            value: "<your-dataset>"\n          }\n        ]\n      }\n    }\n  ) {\n  query: Query\n}\n'})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["Set the api key you've copied before to the environment variable named ",(0,o.jsx)(t.code,{children:"HONEYCOMB_API_KEY"})," and start tailcall with updated config"]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Now make some requests to running service and wait a little bit until honeycomb proceeds the data. After that you can go to ",(0,o.jsx)(t.code,{children:"Home -> Total traces"})," and click on the trace with name ",(0,o.jsx)(t.code,{children:"request"}),". Now choose ",(0,o.jsx)(t.code,{children:"Traces"})," in the bottom and click on the first trace from the list. You should see the picture similar to this:"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"trace view",src:n(6034).Z+"",width:"2099",height:"1212"})}),"\n",(0,o.jsx)(t.p,{children:"Here you can see data about the request that was made to tailcall and what actions were made to handle this request."}),"\n",(0,o.jsxs)(t.p,{children:["To see metrics now go ",(0,o.jsx)(t.code,{children:"Query"})," and run a query to fetch the data about metrics. You can use following screenshot as an example:"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"metrics view",src:n(9627).Z+"",width:"2103",height:"1211"})})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},9627:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/honeycomb-metrics-134082a057a0388e391fe0c6f4e5cd37.png"},6034:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/honeycomb-trace-cd9cec851a91c0a633bb18cf06bcfaaf.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>r});var o=n(7294);const i={},a=o.createContext(i);function r(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);