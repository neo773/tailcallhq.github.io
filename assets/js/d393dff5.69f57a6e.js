"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7973],{5944:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var i=t(5893),n=t(1151);const s={title:"@link"},o=void 0,l={id:"operators/link",title:"@link",description:"The @link operator is used for bringing external resources into your GraphQL schema. It makes it easier to include configurations, .proto files for gRPC services, and other files into your schema. With this operator, external resources are either merged with or used effectively in the importing configuration.",source:"@site/docs/operators/link.md",sourceDirName:"operators",slug:"/operators/link",permalink:"/docs/operators/link",draft:!1,unlisted:!1,editUrl:"https://github.com/tailcallhq/tailcallhq.github.io/tree/develop/docs/operators/link.md",tags:[],version:"current",frontMatter:{title:"@link"},sidebar:"tutorialSidebar",previous:{title:"@http",permalink:"/docs/operators/http"},next:{title:"@modify",permalink:"/docs/operators/modify"}},c={},a=[{value:"How it Works",id:"how-it-works",level:2},{value:"Example",id:"example",level:2},{value:"Supported Types",id:"supported-types",level:2}];function h(e){const r={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.strong,{children:"@link"})," operator is used for bringing external resources into your GraphQL schema. It makes it easier to include configurations, .proto files for gRPC services, and other files into your schema. With this operator, external resources are either merged with or used effectively in the importing configuration."]}),"\n",(0,i.jsx)(r.h2,{id:"how-it-works",children:"How it Works"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"@link"})," directive requires specifying a source ",(0,i.jsx)(r.code,{children:"src"}),", the resource's type ",(0,i.jsx)(r.code,{children:"type"}),", and an optional identifier ",(0,i.jsx)(r.code,{children:"id"}),"."]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"src"}),": The source of the link is defined here. It can be either a URL or a file path. When a file path is given, it's relative to the file's location that is importing the link."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"type"}),": This specifies the link's type, which determines how the imported resource is integrated into the schema. For a list of supported types, see the ",(0,i.jsx)(r.a,{href:"#supported-types",children:"Supported Types"})," section."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"id"}),": This is an optional field that assigns a unique identifier to the link. It's helpful for referring to the link within the schema."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(r.p,{children:["The following example illustrates how to utilize the ",(0,i.jsx)(r.code,{children:"@link"})," directive to incorporate a Protocol Buffers (.proto) file for a gRPC service into your GraphQL schema."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-graphql",metastring:"showLineNumbers",children:'schema\n  @server(port: 8000, graphiql: true)\n  @upstream(baseURL: "http://news.local", httpCache: true, batch: {delay: 10})\n  @link(id: "news", src: "../src/grpc/news.proto", type: Protobuf) {\n  query: Query\n}\n\ntype Query {\n  news: NewsData! @grpc(method: "news.NewsService.GetAllNews")\n}\n\ntype News {\n  id: Int\n  title: String\n  body: String\n  postImage: String\n}\n\ntype NewsData {\n  news: [News]!\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"@link"})," directive supports the following types of links:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Config"}),": Imports a schema configuration file. During the merge, settings from the imported file override those in the main schema for any overlaps, facilitating a modular and scalable approach to schema configuration. The operation is morally equivalent to tailcall's ",(0,i.jsx)(r.a,{href:"/docs/guides/cli#compose",children:"compose"})," command."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Protobuf"}),": Imports a .proto file for gRPC services. This type facilitates the integration of gRPC services into your GraphQL schema by allowing the inclusion of Protocol Buffers definitions. It enables the GraphQL server to communicate with gRPC services directly. For integrating gRPC services, refer to ",(0,i.jsx)(r.a,{href:"/docs/guides/grpc",children:"gRPC Integration Guide"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Script"}),": A link to an external JavaScript file that listens on every HTTP request response event. This allows for the execution of custom logic or filters based on the request and response. Example usage:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",metastring:"showLineNumbers",children:'function onRequest({request}) {\n  // Add a custom header for all outgoing responses\n  request.headers["X-Custom-Header"] = "Processed"\n\n  // Return the updated request\n  return {request}\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Cert"}),": Imports a SSL/TLS certificate for HTTPS."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Key"}),": Imports a SSL/TLS private key for HTTPS."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Each type serves a specific purpose, enabling the flexible integration of external resources into your GraphQL schema."})]})}function d(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,r,t)=>{t.d(r,{Z:()=>l,a:()=>o});var i=t(7294);const n={},s=i.createContext(n);function o(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);