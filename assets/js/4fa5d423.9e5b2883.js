"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6105],{2039:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var n=o(5893),s=o(1151);const r={title:"@const"},c=void 0,a={id:"operators/const",title:"@const",description:"The @const operators allows us to embed a constant response for the schema. For eg:",source:"@site/docs/operators/const.md",sourceDirName:"operators",slug:"/operators/const",permalink:"/docs/operators/const",draft:!1,unlisted:!1,editUrl:"https://github.com/tailcallhq/tailcallhq.github.io/tree/develop/docs/operators/const.md",tags:[],version:"current",frontMatter:{title:"@const"},sidebar:"tutorialSidebar",previous:{title:"@cache",permalink:"/docs/operators/cache"},next:{title:"@graphQL",permalink:"/docs/operators/graphql"}},i={},l=[];function p(e){const t={code:"code",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"@const"})," operators allows us to embed a constant response for the schema. For eg:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",children:'schema {\n  query: Query\n}\n\ntype Query {\n  user: User @const(data: {name: "John", age: 12})\n}\n\ntype User {\n  name: String\n  age: Int\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"The const operator also checks the provided value at compile time to ensure it matches the field's schema. If not, the console displays a descriptive error message."})]})}function d(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},1151:(e,t,o)=>{o.d(t,{Z:()=>a,a:()=>c});var n=o(7294);const s={},r=n.createContext(s);function c(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);